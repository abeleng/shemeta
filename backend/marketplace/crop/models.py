from django.db import models

class Crop(models.Model):
    name = models.CharField(max_length=100, unique=True)
    ndvi_peak = models.FloatField()
    ndvi_scale = models.FloatField()
    ndvi_seasonal_avg = models.FloatField()
    ndvi_start_of_season = models.IntegerField()
    ndvi_end_of_season = models.IntegerField()
    ndvi_integral = models.FloatField()
    ndvi_threshold = models.FloatField()
    ndvi_anomaly_avg = models.FloatField()
    seasonal_rainfall_total_min = models.FloatField()
    seasonal_rainfall_total_opt = models.FloatField()
    seasonal_rainfall_total_max = models.FloatField()
    onset_date = models.IntegerField()
    cessation_date = models.IntegerField()
    rainy_days_count = models.IntegerField()
    dry_spell_days = models.IntegerField()
    onset_delay_days = models.IntegerField()
    onset_threshold = models.FloatField()
    rainy_day_threshold = models.IntegerField()
    dry_spell_threshold = models.IntegerField()
    rainfall_std_dev = models.FloatField()
    rainfall_skewness = models.FloatField()
    data_quality_flag = models.FloatField()
    mean_soil_moisture = models.FloatField()
    dry_soil_days = models.IntegerField()
    dry_threshold = models.FloatField()
    soil_moisture_std = models.FloatField()
    mean_temp_season_min = models.FloatField()
    mean_temp_season_max = models.FloatField()
    max_temp_avg = models.FloatField()
    min_temp_avg = models.FloatField()
    gdd_total = models.IntegerField()
    gdd_base_temp = models.IntegerField()
    heatwave_days = models.IntegerField()
    heatwave_threshold = models.IntegerField()

    def __str__(self):
        return self.name

class KebeleCrop(models.Model):
    kebele = models.CharField(max_length=100)
    crop = models.CharField(max_length=100)
    seasonal_rainfall_total = models.FloatField()
    onset_date = models.FloatField()
    cessation_date = models.FloatField()
    rainy_days_count = models.FloatField()
    dry_spell_days = models.FloatField()
    onset_delay_days = models.FloatField()
    onset_threshold = models.FloatField()
    rainy_day_threshold = models.FloatField()
    dry_spell_threshold = models.FloatField()
    rainfall_std_dev = models.FloatField()
    rainfall_skewness = models.FloatField()
    mean_soil_moisture = models.FloatField()
    dry_soil_days = models.FloatField()
    dry_threshold = models.FloatField()
    soil_moisture_std = models.FloatField()
    mean_temp_season = models.FloatField()
    max_temp_avg = models.FloatField()
    min_temp_avg = models.FloatField()
    gdd_total = models.FloatField()
    gdd_base_temp = models.FloatField()
    heatwave_days = models.FloatField()
    heatwave_threshold = models.FloatField()
    ndvi_peak = models.FloatField()
    ndvi_scale = models.FloatField()
    ndvi_seasonal_avg = models.FloatField()
    ndvi_start_of_season = models.FloatField()
    ndvi_end_of_season = models.FloatField()
    ndvi_integral = models.FloatField()
    ndvi_threshold = models.FloatField()
    ndvi_anomaly_avg = models.FloatField()

    def __str__(self):
        return f"{self.kebele} - {self.crop}"